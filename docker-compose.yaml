version: "3.6"
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  hasura:
    image: hasura/graphql-engine:v2.0.1.cli-migrations-v3
    depends_on:
      - "postgres"
    working_dir: /hasura
    restart: always
    volumes:
      - ./hasura:/hasura
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura/migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura/metadata
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_JWT_SECRET: >
        {
          "type": "RS256",
          "jwk_url": "https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com",
          "audience": "${FIREBASE_PROJECT_ID}",
          "issuer": "https://securetoken.google.com/${FIREBASE_PROJECT_ID}",
        }
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: app
    volumes:
      - ./app:/usr/src/app
    ports:
      - "${VUE_APP_PORT}:3000"
    env_file:
      - .env
    environment:
      VITE_FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      VITE_FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
      VITE_FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      VITE_FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID}
      VITE_FIREBASE_APP_ID: ${FIREBASE_APP_ID}
      VITE_FIREBASE_MEASUREMENT_ID: ${FIREBASE_MEASUREMENT_ID}
    depends_on:
      - "hasura"
  ngrok:
    image: shkoliar/ngrok:latest
    command: sh -c "ngrok authtoken ${NGROK_AUTHTOKEN} && ./start.sh"
    ports:
      - ${NGROK_PORT}:4551
    environment:
      - DOMAIN=app
      - PORT=3000
      - BIND_TLS=true
    depends_on:
      - "app"
volumes:
  db_data:
